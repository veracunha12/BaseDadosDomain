@startuml
'https://plantuml.com/class-diagram

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

SNS "1" --> "*" EMPLOYEE






class DGS {
    - names
    -vatnumber
     size()
}

class SNS {
  - String name
    - String vatNumber
    - String website
    - String phone
    - String email

    - addTask(task)
    - validateTask(task)
    + anyEmployeeHasEmail(email)
    + Organization(name, vatNumber, webSite, phone, email, postalAddress, manager)
    + createTask(reference, description, informalDesccription,\ntechnicalDescription, duration, cost, taskCategoryDescription)
    - getEmployeeByEmail(email)

}
class EMPLOYEE {
Object[] elementData
size()
}
class ADMIN {
-Role

}
class RECEPTIONIST {
 - name
 - email
 - position
 - phone
}
class NURSE {
   -name
   - email
   - position
   - phone
   -address
   - code (IDEmployee)
Object[] elementData
size()
}
class SNSUSER {
- name
- birthDate
- sex:
- postalAddress
- phoneNumber
- emailAddress
- citizenCardNumber
- snsUserNumber
}
class VACCINATIONCENTER {
Object[] elementData
size()
}
class HEALTHCARECENTER {
Object[] elementData
size()
}
class VACCINATION {
Object[] elementData
size()
}
class VACCINEAPPOINTMENT {
- date
- time
- vaccineAppointment
}
class VACCINE {
-Id
-Name
-Brand
-Vaccine Type
}
class VACCINETYPE{
 -Code
 -Short description
 -Vaccine technology
}
class VACCINEAPPOINTMENT {
    - time: String
    - date: Date
    - cost: double
    - vaccineType: VaccineType
    - localVaccineCenters: LocalVaccineCenters

    + scheduleAppointment(): void
    + cancelAppointment(): void

}
class ADVERSEREACTIONS {
Object[] elementData
size()
}
class ARRIVAL{
Object[] elementData
size()
}
class RECOVERYROOM{
Object[] elementData
size()
}
class WAITINGROOM {
Object[] elementData
size()
}
class PANDEMIC {
Object[] elementData
size()
}
class APPLICATIONSESSION{
    + static getInstance()
    + getCurrentSession()

}
class USERSESSION {
+ getUserEmail()

}
enum TimeUnit {
HOURS
MINUTES
SECONDS
}

enum Date {
DAYS
MONTH
YEAR
}

@enduml